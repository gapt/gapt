reference defs.hlk;


define proof prog-closed
  with meta term k, m of type nat;

  proves
    PRE, REM, 0 < m :- C( \nu( k ,m ) );

  with undef C
    :- O( compN( \nu( k, m ) ) );
  with paramod
    left by proof prog-closed-p2( k, m )
    right by proof prog-closed-p1( k, m );
;

define proof prog-closed-p1
  with meta term k, l of type nat;

  proves
    0 < l, PRE :- O( U( k, l ) );

  with undef O
    :- all m ( ( m \in U( k, l ) ) impl
      ( ex t ( \nu( m, t + 1 ) \subseteq U( k, l ) ) ) );
  with all right
    :- ( m_0 \in U( k, l ) ) impl
      ( ex t ( \nu( m_0, t + 1 ) \subseteq U( k, l ) ) );
  with impl right
    m_0 \in U( k, l ) :-
     ex t ( \nu( m_0, t + 1 ) \subseteq U( k, l ) );

  with undef PRE
    all n ( 0 < n impl ex m n = m + 1 ) :- ;
  with all left
    0 < l impl ex m l = m + 1 :- ;
  with impl left
    ex m l = m + 1 :-
    left auto propositional 0 < l :- 0 < l;
  with ex left
    l = l_0 + 1 :- ;

  with ex right
    :- \nu( m_0, l_0 + 1 ) \subseteq U( k, l );
  with paramod by l = l_0 + 1
    right :- \nu( m_0, l ) \subseteq U( k, l );

  with undef \subseteq
    :- all n ( n \in \nu( m_0, l ) impl n \in U( k, l ) );
  with all right
    :- t_0 \in \nu( m_0, l ) impl t_0 \in U( k, l );
  with impl right
    t_0 \in \nu( m_0, l ) :- t_0 \in U( k, l );

  with undef U
    ex i ( ( i < l and not i = k ) and m_0 \in \nu( i, l ) ) :-;
  with ex left
    ( i_0 < l and not i_0 = k ) and m_0 \in \nu( i_0, l ) :-;

  with and left
    m_0 \in \nu( i_0, l ) :-;

  with undef U
    :- ex i ( ( i < l and not i = k ) and t_0 \in \nu( i, l ) );
  with ex right
    :- ( i_0 < l and not i_0 = k ) and t_0 \in \nu( i_0, l );
  with and right
    :- i_0 < l and not i_0 = k
    right by proof prog-closed-p13(l,l_0);
  continued auto propositional ( i_0 < l and not i_0 = k ) and m_0 \in \nu( i_0, l ) :- i_0 < l and not i_0 = k;
;

define proof prog-closed-p13
  with meta term l,n of type nat;

  proves
    m_0 \in \nu( i_0, l ),
    t_0 \in \nu( m_0, l )
    :- t_0 \in \nu( i_0, l );

  with undef \nu
    ex r ( m_0 = i_0 + r * l ) :-;
  with ex left
    m_0 = i_0 + q_0 * l :-;
  with undef \nu
    ex r ( t_0 = m_0 + r * l ) :-;
  with ex left
    t_0 = m_0 + r_0 * l :-;
  with undef \nu
    :- ex r ( t_0 = i_0 + r * l );
  with ex right
    :- t_0 = i_0 + (q_0 + r_0) * l;
  with paramod by m_0 = i_0 + q_0 * l
    right t_0 = (i_0 + q_0 * l) + r_0 * l :-;
  with paramod by
    (i_0 + q_0 * l) + r_0 * l =
    i_0 + ( q_0 * l + r_0 * l )
    right t_0 = i_0 + ( q_0 * l + r_0 * l ) :- ;
  with paramod by
    q_0 * l + r_0 * l = (q_0 + r_0) * l
    right t_0 = i_0 + (q_0 + r_0) * l :- ;
;

define proof prog-closed-p2
  with meta term k, l of type nat;

  proves
    REM, 0 < l :- U( k, l ) = compN( \nu( k, l ) );

  with undef equality of type myset, myset
    :- all n ( ( n \in U( k, l ) impl n \in compN( \nu( k, l ) ) ) and
               ( n \in compN( \nu( k, l ) ) impl n \in U( k, l ) ) );
  with all right
    :- ( t_0 \in U( k, l ) impl t_0 \in compN( \nu( k, l ) ) ) and
       ( t_0 \in compN( \nu( k, l ) ) impl t_0 \in U( k, l ) );
  with and right
    left by proof prog-closed-p21( k, l )
    right by proof prog-closed-p22( k, l );
;

define proof prog-closed-p21
  with meta term k, l of type nat;

  proves
    0 < l :- t_0 \in U( k, l ) impl t_0 \in compN( \nu( k, l ) );

  with impl right
    t_0 \in U( k, l ) :- t_0 \in compN( \nu( k, l ) );
  with undef compN
    :- not t_0 \in \nu( k, l );
  with not right
    t_0 \in \nu( k, l ) :-;
  with undef U
    ex i ( ( i < l and not i = k ) and t_0 \in \nu( i, l ) ) :-;
  with ex left
    ( i_0 < l and not i_0 = k ) and t_0 \in \nu( i_0, l ) :-;
  with and left
    i_0 < l, not i_0 = k, t_0 \in \nu( i_0, l ) :-;
  with undef \nu
    ex r ( t_0 = i_0 + r * l ), ex r ( t_0 = k + r * l ) :-;
  with ex left
    t_0 = i_0 + q_0 * l, t_0 = k + r_0 * l :-;
  with paramod
    i_0 + q_0 * l = k + r_0 * l :-
    left auto propositional t_0 = i_0 + q_0 * l :- t_0 = i_0 + q_0 * l;
  with cut i_0 < k or k < i_0
    left by proof prog-closed-p211( i_0, k )
    right by proof prog-closed-p212( k, l );
;

define proof prog-closed-p211
  with meta term l, k of type nat;

  proves
    not l = k :- l < k or k < l;

  with or right
    :- l < k, k < l;
  with not left
    :- l = k;
  explicit axiom
    :- l = k, l < k, k < l;
;

define proof prog-closed-p212
  with meta term k, l of type nat;

  proves
    i_0 < k or k < i_0, k < l, i_0 < l, t_0 = i_0 + q_0 * l,
    i_0 + q_0 * l = k + r_0 * l :-;

  with or left
    left explicit axiom
      i_0 < k, k < l, i_0 < l, i_0 + q_0 * l = k + r_0 * l :-
    right explicit axiom
      k < i_0, k < l, i_0 < l, i_0 + q_0 * l = k + r_0 * l :-;
;

define proof prog-closed-p22
  with meta term k, l of type nat;

  proves
    REM, 0 < l :-
    t_0 \in compN( \nu( k, l ) ) impl t_0 \in U( k, l );

  with impl right
    t_0 \in compN( \nu( k, l ) ) :- t_0 \in U( k, l );
  with undef REM
    all n ( 0 < n impl all m ex o ( o < n and m \in \nu( o, n ) ) ) :-;
  with all left
    0 < l impl all m ex o ( o < l and m \in \nu( o, l ) ) :- ;
  with impl left
    left auto propositional 0 < l :- 0 < l
    right by proof prog-closed-p222( k, l );
;

define proof prog-closed-p222
  with meta term k, l of type nat;

  proves
    all m ex o ( o < l and m \in \nu( o, l ) ),
    t_0 \in compN( \nu( k, l ) ) :- t_0 \in U( k, l );

  with all left
    ex o ( o < l and t_0 \in \nu( o, l ) ) :-;
  with ex left
    t_1 < l and t_0 \in \nu( t_1, l ) :-;
  with and left
    t_1 < l, t_0 \in \nu( t_1, l ) :-;
  with undef U
    :- ex i ( ( i < l and not i = k ) and t_0 \in \nu( i, l ) );
  with ex right
    :- ( t_1 < l and not t_1 = k ) and t_0 \in \nu( t_1, l );
  with and right
    :- t_1 < l and not t_1 = k
    right auto propositional t_0 \in \nu( t_1, l ) :- t_0 \in \nu( t_1, l );
  with and right
    :- not t_1 = k
    left auto propositional t_1 < l :- t_1 < l;
  with not right
    t_1 = k :-;
  with undef compN
    not t_0 \in \nu( k, l ) :-;
  with not left
    :- t_0 \in \nu( k, l );
  with paramod by t_1 = k
    right t_0 \in \nu( k, l ) :- ;
;

